name: deploy aws application

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  APP_NAME: test-aws
  PROFILE: aws
  ENVIROMENT_NAME: staging

on:
  workflow_dispatch:
    inputs:
      docker-image-tag:
        description: "The docker image to deploy"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-20.04
    name: Deploy AWS TEST application
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: NPM install
        run: cd cdk && npm install

      - name: Deploy service stack
        if: github.ref == 'refs/heads/main'

        working-directory: cdk
        run: npm run service:deploy -- -c dockerImageTag=${{ github.event.inputs.docker-image-tag }}

      # Each Service stack updates creates a new parameter stack that CloudFormation does not clean up for us.
      # This step deletes all "*Service-Parameters*" stacks except the latest one to keep the house clean.
      # staging-test-aws-Service-Parameters MUST BE CHANGED ON PARAMETERS ${}-${}-*
      - name: Clean up old parameter stacks
        working-directory: cdk
        run: |
          aws cloudformation describe-stacks --region ${AWS_DEFAULT_REGION} --query "Stacks[].StackName" --output text | sed -e "s/\s\+/\n/g" | grep -e "staging-test-aws-Service-Parameters" | sort -r | tail -n+2 > stacks_to_be_deleted.txt
          for stack in $(cat stacks_to_be_deleted.txt); do aws cloudformation delete-stack --stack-name $stack --region ${AWS_DEFAULT_REGION};  done